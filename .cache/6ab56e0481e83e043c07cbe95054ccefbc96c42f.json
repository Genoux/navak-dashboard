{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue","filename":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue","passPerPreset":false,"envName":"development","cwd":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard","root":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: 'VueTailwindColorPicker',\n  props: {\n    value: String,\n    swatches: {\n      type: Array,\n      \"default\": function () {\n        return [];\n      }\n    },\n    hideSwatches: Boolean\n  },\n  data: function () {\n    return {\n      canvasCursor: null,\n      lineCursor: null,\n      opacityCursor: null,\n      draggingLineCursor: false,\n      draggingCanvasCursor: false,\n      draggingOpacityCursor: false,\n      dragStartColor: null,\n      lineWidth: 160,\n      lineLeft: 0,\n      canvasWidth: 208,\n      canvasLeft: 0,\n      canvasTop: 0,\n      canvasHeight: 0,\n      opacityWidth: 160,\n      opacityLeft: 0,\n      percentageOpacity: 0,\n      percentageBlack: 0,\n      percentageWhite: 0,\n      inputType: 'rgba',\n      colorLazy: {\n        r: 255,\n        g: 219,\n        b: 0,\n        a: 1,\n        hexa: '#FFFE00FF'\n      },\n      colorData: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1,\n        hexa: '#000000FF'\n      },\n      lineColorData: {\n        r: 0,\n        g: 0,\n        b: 0\n      },\n      swatchesLazy: []\n    };\n  },\n  computed: {\n    inputValue: {\n      get: function () {\n        return this.value;\n      },\n      set: function (val) {\n        this.$emit('input', val);\n      }\n    },\n    swatchesValue: {\n      get: function () {\n        return this.swatches || [];\n      },\n      set: function (val) {\n        this.$emit('update:swatches', val);\n      }\n    },\n    hasSelectedSwatch: function () {\n      return this.swatchesLazy.includes(this.inputValue);\n    },\n    color: function () {\n      return \"rgba(\" + this.colorData.r + \", \" + this.colorData.g + \", \" + this.colorData.b + \", \" + this.colorData.a + \")\";\n    },\n    canvasColor: function () {\n      return \"rgba(\" + this.lineColorData.r + \", \" + this.lineColorData.g + \", \" + this.lineColorData.b + \", 1)\";\n    },\n    opacityLineBackground: function () {\n      var opaque = \"rgba(\" + this.colorData.r + \", \" + this.colorData.g + \", \" + this.colorData.b + \", 0)\";\n      var solid = \"rgba(\" + this.colorData.r + \", \" + this.colorData.g + \", \" + this.colorData.b + \", 1)\";\n      return \"linear-gradient(to right, \" + opaque + \", \" + solid + \")\";\n    }\n  },\n  methods: {\n    mousedownCanvas: function (e) {\n      if (e.which !== 1) {\n        return;\n      }\n\n      this.registerListeners();\n      this.dragStartColor = this.color;\n      this.draggingCanvasCursor = true;\n      this.setSizePoses();\n      this.canvasCursor = this.$refs.canvasCursor;\n      this.canvasCursor.style.transform = \"translate(\" + e.offsetX + \"px, \" + e.offsetY + \"px)\";\n      this.percentageBlack = e.offsetY / this.canvasHeight;\n      this.percentageWhite = 1 - e.offsetX / this.canvasWidth;\n      this.setColorData();\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    mousedownLine: function (e) {\n      if (e.which !== 1) {\n        return;\n      }\n\n      this.registerListeners();\n      this.dragStartColor = this.color;\n      this.draggingLineCursor = true;\n      this.setSizePoses();\n      this.lineCursor = this.$refs.lineCursor;\n      this.lineCursor.style.transform = \"translate(\" + e.offsetX + \"px, 0px)\";\n      this.calculateLineColor(e.offsetX);\n      this.setColorData();\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    mousedownOpacity: function (e) {\n      if (e.which !== 1) {\n        return;\n      }\n\n      this.registerListeners();\n      this.dragStartColor = this.color;\n      this.draggingOpacityCursor = true;\n      this.setSizePoses();\n      this.opacityCursor = this.$refs.opacityCursor;\n      this.opacityCursor.style.transform = \"translate(\" + e.offsetX + \"px, 0px)\";\n      this.percentageOpacity = e.offsetX / this.opacityWidth;\n      this.setColorData();\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    mouseup: function (e) {\n      if (this.draggingLineCursor || this.draggingCanvasCursor || this.draggingOpacityCursor) {\n        if (this.dragStartColor !== this.color) {\n          this.$emit('change', this.colorData.hexa);\n        }\n      }\n\n      this.draggingLineCursor = false;\n      this.draggingCanvasCursor = false;\n      this.draggingOpacityCursor = false;\n      this.unregisterListeners();\n    },\n    mousemove: function (e) {\n      if (this.draggingLineCursor) {\n        var pos = e.pageX - this.lineLeft;\n        pos = Math.min(this.lineWidth, Math.max(0, pos));\n        this.lineCursor.style.transform = \"translate(\" + pos + \"px, 0px)\";\n        this.calculateLineColor(pos);\n      } else if (this.draggingCanvasCursor) {\n        var posX = e.pageX - this.canvasLeft;\n        var posY = e.pageY - this.canvasTop;\n        posX = Math.min(this.canvasWidth, Math.max(0, posX));\n        posY = Math.min(this.canvasHeight, Math.max(0, posY));\n        this.canvasCursor.style.transform = \"translate(\" + posX + \"px, \" + posY + \"px)\";\n        this.percentageBlack = posY / this.canvasHeight;\n        this.percentageWhite = 1 - posX / this.canvasWidth;\n      } else if (this.draggingOpacityCursor) {\n        var pos = e.pageX - this.opacityLeft;\n        pos = Math.min(this.opacityWidth, Math.max(0, pos));\n        this.opacityCursor.style.transform = \"translate(\" + pos + \"px, 0px)\";\n        this.percentageOpacity = pos / this.opacityWidth;\n      }\n\n      this.setColorData();\n    },\n    setColorData: function () {\n      var targetVal = 255 * (1 - this.percentageBlack);\n      targetVal = Math.min(255, Math.max(0, Math.round(targetVal)));\n      var remainingR = targetVal - this.lineColorData.r;\n      var remainingG = targetVal - this.lineColorData.g;\n      var remainingB = targetVal - this.lineColorData.b;\n      var rDiff = this.percentageWhite * remainingR;\n      var gDiff = this.percentageWhite * remainingG;\n      var bDiff = this.percentageWhite * remainingB;\n      var r = this.lineColorData.r + rDiff;\n      var g = this.lineColorData.g + gDiff;\n      var b = this.lineColorData.b + bDiff;\n      this.colorData.r = Math.min(targetVal, Math.max(0, Math.round(r)));\n      this.colorData.g = Math.min(targetVal, Math.max(0, Math.round(g)));\n      this.colorData.b = Math.min(targetVal, Math.max(0, Math.round(b)));\n      this.colorData.a = Math.min(1, Math.max(0, Number(this.percentageOpacity.toFixed(2))));\n      this.colorLazy.r = this.colorData.r;\n      this.colorLazy.g = this.colorData.g;\n      this.colorLazy.b = this.colorData.b;\n      this.colorLazy.a = this.colorData.a;\n      this.colorData.hexa = '#' + this.componentToHex(this.colorData.r) + this.componentToHex(this.colorData.g) + this.componentToHex(this.colorData.b) + this.componentToHex(Math.round(this.colorData.a * 255));\n      this.colorLazy.hexa = this.colorData.hexa;\n      this.inputValue = this.colorData.hexa;\n    },\n    calculateLineColor: function (linePos) {\n      var perc = linePos / this.lineWidth;\n      var value = perc % (1 / 6);\n      var colorPerc = value / (1 / 6);\n      var percRed = 1;\n      var percGreen = 1;\n      var percBlue = 1;\n\n      if (perc < 1 / 6) {\n        percGreen = colorPerc;\n        percBlue = 0;\n      } else if (perc < 2 / 6) {\n        percRed = 1 - colorPerc;\n        percBlue = 0;\n      } else if (perc < 3 / 6) {\n        percRed = 0;\n        percBlue = colorPerc;\n      } else if (perc < 4 / 6) {\n        percRed = 0;\n        percGreen = 1 - colorPerc;\n      } else if (perc < 5 / 6) {\n        percRed = colorPerc;\n        percGreen = 0;\n      } else {\n        percGreen = 0;\n        percBlue = 1 - colorPerc;\n      }\n\n      this.lineColorData.r = Math.min(255, Math.max(0, Math.round(percRed * 255)));\n      this.lineColorData.g = Math.min(255, Math.max(0, Math.round(percGreen * 255)));\n      this.lineColorData.b = Math.min(255, Math.max(0, Math.round(percBlue * 255)));\n    },\n    registerListeners: function () {\n      document.addEventListener('mouseup', this.mouseup);\n      document.addEventListener('mousemove', this.mousemove);\n    },\n    unregisterListeners: function () {\n      document.removeEventListener('mouseup', this.mouseup);\n      document.removeEventListener('mousemove', this.mousemove);\n    },\n    setSizePoses: function () {\n      var boundingRect = this.$refs.line.getBoundingClientRect();\n      this.lineLeft = boundingRect.left;\n      var canvBoundingRect = this.$refs.canvas.getBoundingClientRect();\n      this.canvasLeft = canvBoundingRect.left;\n      this.canvasTop = canvBoundingRect.top;\n      this.canvasHeight = canvBoundingRect.height;\n      var boundingRect = this.$refs.opacityLine.getBoundingClientRect();\n      this.opacityLeft = boundingRect.left;\n    },\n    normalizeColorData: function () {\n      var _this = this;\n\n      var normalized = {\n        r: null,\n        g: null,\n        b: null,\n        variable: null\n      };\n      var _this$colorData = this.colorData,\n          r = _this$colorData.r,\n          g = _this$colorData.g,\n          b = _this$colorData.b;\n\n      if (b > g && b > r) {\n        normalized.b = 1;\n      } else if (g > r && g > b) {\n        normalized.g = 1;\n      } else {\n        normalized.r = 1;\n      }\n\n      if (r < g && r < b) {\n        normalized.r = 0;\n      } else if (g < r && g < b) {\n        normalized.g = 0;\n      } else {\n        normalized.b = 0;\n      }\n\n      Array.from('rgb').forEach(function (col) {\n        if (normalized[col] === null) {\n          normalized.variable = col;\n          normalized[col] = _this.colorData[col] / 255;\n        }\n      });\n      return normalized;\n    },\n    initSwatches: function () {\n      var _this2 = this;\n\n      if (this.swatches !== null && Array.isArray(this.swatches)) {\n        var cleanedSwatches = this.swatches.map(function (s) {\n          return _this2.cleanHexa(s);\n        });\n        cleanedSwatches.forEach(function (swatch) {\n          if (!_this2.swatchesLazy.includes(swatch)) {\n            _this2.swatchesLazy.push(swatch);\n          }\n        });\n      } else {\n        var cleanedSwatches = ['#f94144', '#f3722c', '#f8961e', '#f9c74f', '#90be6d', '#43aa8b', '#577590', '#22223b', '#4a4e69', '#c9ada7'].map(function (s) {\n          return _this2.cleanHexa(s);\n        });\n        this.swatchesLazy = cleanedSwatches;\n      }\n    },\n    init: function () {\n      if (this.value) {\n        this.colorLazy = this.parseHexa(this.value);\n      }\n\n      if (!this.hideSwatches) this.initSwatches();\n      this.validate();\n      this.setUICursors();\n    },\n    inputUpdated: function () {\n      this.validate();\n      this.setUICursors();\n    },\n    hexaInputUpdated: function () {\n      this.validateHexa();\n      this.setUICursors();\n    },\n    validateHexChar: function (c) {\n      if (c.length < 0 || c.length > 1) return '0';\n\n      if (isNaN(c)) {\n        var validChars = ['A', 'B', 'C', 'D', 'E', 'F'];\n\n        if (validChars.includes(c.toUpperCase())) {\n          return c.toUpperCase();\n        } else {\n          return '0';\n        }\n      } else {\n        return c;\n      }\n    },\n    cleanHexa: function (hexa) {\n      var _this3 = this;\n\n      if (!hexa || hexa.length < 3) return '#000000FF';\n\n      var _cleaned = hexa.toUpperCase();\n\n      if (_cleaned.startsWith('#')) _cleaned = _cleaned.substr(1);\n      if (_cleaned.length < 3) return '#000000FF';\n      var r, g, b, a;\n      r = g = b = '00';\n      a = 'FF';\n\n      if (_cleaned.length === 3) {\n        var rgb = _cleaned.split('').map(function (r) {\n          return \"0\" + r;\n        }).map(function (r) {\n          return _this3.validateHexChar(r);\n        });\n\n        r = rgb[0];\n        g = rgb[1];\n        b = rgb[2];\n      } else if (_cleaned.length >= 6) {\n        var rgb = _cleaned.split('').map(function (r) {\n          return _this3.validateHexChar(r);\n        });\n\n        r = rgb[0] + rgb[1];\n        g = rgb[2] + rgb[3];\n        b = rgb[4] + rgb[5];\n\n        if (rgb.length === 8) {\n          a = rgb[6] + rgb[7];\n        }\n      }\n\n      return \"#\" + r + g + b + a;\n    },\n    parseHexa: function (hexa) {\n      var hexaArr = this.cleanHexa(hexa).substr(1).split('');\n      var h = hexaArr[0] + hexaArr[1];\n      var e = hexaArr[2] + hexaArr[3];\n      var x = hexaArr[4] + hexaArr[5];\n      var ha = hexaArr[6] + hexaArr[7];\n      var r = parseInt(h, 16);\n      var g = parseInt(e, 16);\n      var b = parseInt(x, 16);\n      var a = parseInt(ha, 16) / 255;\n      return {\n        hexa: '#' + h + e + x + ha,\n        r: r,\n        g: g,\n        b: b,\n        a: a\n      };\n    },\n    validateHexa: function () {\n      var parsedColor = this.parseHexa(this.colorLazy.hexa);\n      this.colorData = _objectSpread({}, parsedColor);\n      this.colorLazy.r = this.colorData.r;\n      this.colorLazy.g = this.colorData.g;\n      this.colorLazy.b = this.colorData.b;\n      this.colorLazy.a = this.colorData.a;\n    },\n    componentToHex: function (c) {\n      var hex = c.toString(16).toUpperCase();\n      return hex.length == 1 ? '0' + hex : hex;\n    },\n    validate: function () {\n      var r = Number(this.colorLazy.r);\n      var g = Number(this.colorLazy.g);\n      var b = Number(this.colorLazy.b);\n      var a = Number(this.colorLazy.a);\n      if (isNaN(r) || r === null) r = 0;\n      if (isNaN(g) || g === null) g = 0;\n      if (isNaN(b) || b === null) b = 0;\n      if (isNaN(a) || a === null) a = 1;\n      r = Math.min(255, Math.max(0, r));\n      g = Math.min(255, Math.max(0, g));\n      b = Math.min(255, Math.max(0, b));\n      a = Math.min(1, Math.max(0, a));\n      this.colorData.r = r;\n      this.colorData.g = g;\n      this.colorData.b = b;\n      this.colorData.a = a;\n      this.colorData.hexa = '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b) + this.componentToHex(Math.round(a * 255));\n      this.colorLazy.hexa = this.colorData.hexa;\n    },\n    setUICursors: function () {\n      var _this4 = this;\n\n      this.setSizePoses();\n      this.percentageOpacity = this.colorData.a;\n      var opacityX = this.percentageOpacity * this.opacityWidth;\n      this.$refs.opacityCursor.style.transform = \"translate(\" + opacityX + \"px, 0px)\";\n      var normalized = this.normalizeColorData();\n      var sector = 0;\n      var variablePerc = 0;\n\n      if (normalized.variable === 'r') {\n        if (normalized.g === 1) {\n          sector = 1;\n          variablePerc = 1 - this.colorData.r / 255;\n        } else if (normalized.b === 1) {\n          sector = 4;\n          variablePerc = this.colorData.r / 255;\n        }\n      } else if (normalized.variable === 'b') {\n        if (normalized.r === 1) {\n          sector = 5;\n          variablePerc = 1 - this.colorData.b / 255;\n        } else if (normalized.g === 1) {\n          sector = 2;\n          variablePerc = this.colorData.b / 255;\n        }\n      } else {\n        if (normalized.r === 1) {\n          sector = 0;\n          variablePerc = this.colorData.g / 255;\n        } else if (normalized.b === 1) {\n          sector = 3;\n          variablePerc = 1 - this.colorData.g / 255;\n        }\n      }\n\n      var sectorLength = this.lineWidth / 6;\n      var variableSectorLeft = variablePerc * sectorLength;\n      var lineCursorLeft = sectorLength * sector + variableSectorLeft;\n      this.$refs.lineCursor.style.transform = \"translate(\" + lineCursorLeft + \"px, 0px)\";\n      this.lineColorData.r = Math.min(255, Math.max(0, Math.round(normalized.r * 255)));\n      this.lineColorData.g = Math.min(255, Math.max(0, Math.round(normalized.g * 255)));\n      this.lineColorData.b = Math.min(255, Math.max(0, Math.round(normalized.b * 255)));\n      Array.from('rgb').forEach(function (col) {\n        if (_this4.lineColorData[col] === 0) {\n          _this4.percentageWhite = _this4.colorData[col] / 255;\n        } else if (_this4.lineColorData[col] === 255) {\n          _this4.percentageBlack = 1 - _this4.colorData[col] / 255;\n        }\n      });\n      var canvCursorX = this.canvasWidth * (1 - this.percentageWhite);\n      var canvCursorY = this.canvasHeight * this.percentageBlack;\n      this.$refs.canvasCursor.style.transform = \"translate(\" + canvCursorX + \"px, \" + canvCursorY + \"px)\";\n    },\n    blurInputR: function () {\n      this.colorLazy.r = this.colorData.r;\n    },\n    blurInputG: function () {\n      this.colorLazy.g = this.colorData.g;\n    },\n    blurInputB: function () {\n      this.colorLazy.b = this.colorData.b;\n    },\n    blurInputA: function () {\n      this.colorLazy.a = this.colorData.a;\n    },\n    blurInputHexa: function () {\n      this.colorLazy.hexa = this.colorData.hexa;\n    },\n    toggleInputs: function () {\n      if (this.inputType === 'rgba') {\n        this.inputType = 'hexa';\n      } else {\n        this.inputType = 'rgba';\n      }\n    },\n    selectSwatch: function (swatchHexa) {\n      var parsedHexa = this.parseHexa(swatchHexa);\n      this.colorData = _objectSpread({}, parsedHexa);\n      this.colorLazy = _objectSpread({}, parsedHexa);\n      this.inputValue = parsedHexa.hexa;\n      this.$emit('change', this.colorData.hexa);\n      this.setUICursors();\n    },\n    deleteSwatch: function (swatch) {\n      this.swatchesLazy = this.swatchesLazy.filter(function (s) {\n        return s !== swatch;\n      });\n      this.$emit('update:swatches', this.swatchesLazy);\n      this.$emit('deleteSwatch', swatch);\n    },\n    addRemoveCurrentSwatch: function () {\n      if (this.hasSelectedSwatch) {\n        this.deleteSwatch(this.inputValue);\n      } else {\n        this.swatchesLazy.push(this.inputValue);\n        this.$emit('update:swatches', this.swatchesLazy);\n        this.$emit('addSwatch', this.inputValue);\n      }\n    }\n  },\n  mounted: function () {\n    var _this5 = this;\n\n    this.$nextTick(function () {\n      _this5.init();\n    });\n  },\n  beforeDestroy: function () {\n    this.unregisterListeners();\n  }\n});","map":{"version":3,"sources":["/Users/johnbarry/Desktop/@john/navak/navak-dashboard/node_modules/vue-tailwind-color-picker/src/vue-tailwind-color-picker.vue"],"names":["_objectSpread","module","link","default","v","exportDefault","name","props","value","String","swatches","type","Array","hideSwatches","Boolean","data","canvasCursor","lineCursor","opacityCursor","draggingLineCursor","draggingCanvasCursor","draggingOpacityCursor","dragStartColor","lineWidth","lineLeft","canvasWidth","canvasLeft","canvasTop","canvasHeight","opacityWidth","opacityLeft","percentageOpacity","percentageBlack","percentageWhite","inputType","colorLazy","r","g","b","a","hexa","colorData","lineColorData","swatchesLazy","computed","inputValue","get","set","val","$emit","swatchesValue","hasSelectedSwatch","includes","color","canvasColor","opacityLineBackground","opaque","solid","methods","mousedownCanvas","e","which","registerListeners","setSizePoses","$refs","style","transform","offsetX","offsetY","setColorData","stopPropagation","preventDefault","mousedownLine","calculateLineColor","mousedownOpacity","mouseup","unregisterListeners","mousemove","pos","pageX","Math","min","max","posX","posY","pageY","targetVal","round","remainingR","remainingG","remainingB","rDiff","gDiff","bDiff","Number","toFixed","componentToHex","linePos","perc","colorPerc","percRed","percGreen","percBlue","document","addEventListener","removeEventListener","boundingRect","line","getBoundingClientRect","left","canvBoundingRect","canvas","top","height","opacityLine","normalizeColorData","normalized","variable","from","forEach","col","initSwatches","isArray","cleanedSwatches","map","s","cleanHexa","swatch","push","init","parseHexa","validate","setUICursors","inputUpdated","hexaInputUpdated","validateHexa","validateHexChar","c","length","isNaN","validChars","toUpperCase","_cleaned","startsWith","substr","rgb","split","hexaArr","h","x","ha","parseInt","parsedColor","hex","toString","opacityX","sector","variablePerc","sectorLength","variableSectorLeft","lineCursorLeft","canvCursorX","canvCursorY","blurInputR","blurInputG","blurInputB","blurInputA","blurInputHexa","toggleInputs","selectSwatch","swatchHexa","parsedHexa","deleteSwatch","filter","addRemoveCurrentSwatch","mounted","$nextTick","beforeDestroy"],"mappings":"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","sourcesContent":["\r\nexport default {\r\n  name: 'VueTailwindColorPicker',\r\n  props: {\r\n    value: String,\r\n    swatches: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    hideSwatches: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      canvasCursor: null,\r\n      lineCursor: null,\r\n      opacityCursor: null,\r\n      draggingLineCursor: false,\r\n      draggingCanvasCursor: false,\r\n      draggingOpacityCursor: false,\r\n      dragStartColor: null,\r\n      lineWidth: 160,\r\n      lineLeft: 0,\r\n      canvasWidth: 208,\r\n      canvasLeft: 0,\r\n      canvasTop: 0,\r\n      canvasHeight: 0,\r\n      opacityWidth: 160,\r\n      opacityLeft: 0,\r\n      percentageOpacity: 0,\r\n      percentageBlack: 0,\r\n      percentageWhite: 0,\r\n      inputType: 'rgba',\r\n      colorLazy: {\r\n        r: 255,\r\n        g: 219,\r\n        b: 0,\r\n        a: 1,\r\n        hexa: '#FFFE00FF'\r\n      },\r\n      colorData: {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n        a: 1,\r\n        hexa: '#000000FF'\r\n      },\r\n      lineColorData: {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0\r\n      },\r\n      swatchesLazy: []\r\n    }\r\n  },\r\n  computed: {\r\n    inputValue: {\r\n      get() {\r\n        return this.value\r\n      },\r\n      set(val) {\r\n        this.$emit('input', val)\r\n      }\r\n    },\r\n    swatchesValue: {\r\n      get() {\r\n        return this.swatches || []\r\n      },\r\n      set(val) {\r\n        this.$emit('update:swatches', val)\r\n      }\r\n    },\r\n    hasSelectedSwatch() {\r\n      return this.swatchesLazy.includes(this.inputValue)\r\n    },\r\n    color() {\r\n      return `rgba(${this.colorData.r}, ${this.colorData.g}, ${this.colorData.b}, ${this.colorData.a})`\r\n    },\r\n    canvasColor() {\r\n      return `rgba(${this.lineColorData.r}, ${this.lineColorData.g}, ${this.lineColorData.b}, 1)`\r\n    },\r\n    opacityLineBackground() {\r\n      var opaque = `rgba(${this.colorData.r}, ${this.colorData.g}, ${this.colorData.b}, 0)`\r\n      var solid = `rgba(${this.colorData.r}, ${this.colorData.g}, ${this.colorData.b}, 1)`\r\n      return `linear-gradient(to right, ${opaque}, ${solid})`\r\n    }\r\n  },\r\n  methods: {\r\n    mousedownCanvas(e) {\r\n      if (e.which !== 1) {\r\n        return\r\n      }\r\n      this.registerListeners()\r\n\r\n      this.dragStartColor = this.color\r\n      this.draggingCanvasCursor = true\r\n      this.setSizePoses()\r\n      this.canvasCursor = this.$refs.canvasCursor\r\n      this.canvasCursor.style.transform = `translate(${e.offsetX}px, ${e.offsetY}px)`\r\n      this.percentageBlack = e.offsetY / this.canvasHeight\r\n      this.percentageWhite = 1 - e.offsetX / this.canvasWidth\r\n      this.setColorData()\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    mousedownLine(e) {\r\n      if (e.which !== 1) {\r\n        return\r\n      }\r\n      this.registerListeners()\r\n\r\n      this.dragStartColor = this.color\r\n      this.draggingLineCursor = true\r\n      this.setSizePoses()\r\n      this.lineCursor = this.$refs.lineCursor\r\n      this.lineCursor.style.transform = `translate(${e.offsetX}px, 0px)`\r\n      this.calculateLineColor(e.offsetX)\r\n      this.setColorData()\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    mousedownOpacity(e) {\r\n      if (e.which !== 1) {\r\n        return\r\n      }\r\n      this.registerListeners()\r\n\r\n      this.dragStartColor = this.color\r\n      this.draggingOpacityCursor = true\r\n      this.setSizePoses()\r\n      this.opacityCursor = this.$refs.opacityCursor\r\n      this.opacityCursor.style.transform = `translate(${e.offsetX}px, 0px)`\r\n      this.percentageOpacity = e.offsetX / this.opacityWidth\r\n\r\n      this.setColorData()\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    mouseup(e) {\r\n      if (this.draggingLineCursor || this.draggingCanvasCursor || this.draggingOpacityCursor) {\r\n        if (this.dragStartColor !== this.color) {\r\n          this.$emit('change', this.colorData.hexa)\r\n        }\r\n      }\r\n      this.draggingLineCursor = false\r\n      this.draggingCanvasCursor = false\r\n      this.draggingOpacityCursor = false\r\n      this.unregisterListeners()\r\n    },\r\n    mousemove(e) {\r\n      if (this.draggingLineCursor) {\r\n        var pos = e.pageX - this.lineLeft\r\n        pos = Math.min(this.lineWidth, Math.max(0, pos))\r\n        this.lineCursor.style.transform = `translate(${pos}px, 0px)`\r\n        this.calculateLineColor(pos)\r\n      } else if (this.draggingCanvasCursor) {\r\n        var posX = e.pageX - this.canvasLeft\r\n        var posY = e.pageY - this.canvasTop\r\n        posX = Math.min(this.canvasWidth, Math.max(0, posX))\r\n        posY = Math.min(this.canvasHeight, Math.max(0, posY))\r\n        this.canvasCursor.style.transform = `translate(${posX}px, ${posY}px)`\r\n        this.percentageBlack = posY / this.canvasHeight\r\n        this.percentageWhite = 1 - posX / this.canvasWidth\r\n      } else if (this.draggingOpacityCursor) {\r\n        var pos = e.pageX - this.opacityLeft\r\n        pos = Math.min(this.opacityWidth, Math.max(0, pos))\r\n        this.opacityCursor.style.transform = `translate(${pos}px, 0px)`\r\n        this.percentageOpacity = pos / this.opacityWidth\r\n      }\r\n      this.setColorData()\r\n    },\r\n    setColorData() {\r\n      var targetVal = 255 * (1 - this.percentageBlack)\r\n      targetVal = Math.min(255, Math.max(0, Math.round(targetVal)))\r\n\r\n      var remainingR = targetVal - this.lineColorData.r\r\n      var remainingG = targetVal - this.lineColorData.g\r\n      var remainingB = targetVal - this.lineColorData.b\r\n\r\n      var rDiff = this.percentageWhite * remainingR\r\n      var gDiff = this.percentageWhite * remainingG\r\n      var bDiff = this.percentageWhite * remainingB\r\n\r\n      var r = this.lineColorData.r + rDiff\r\n      var g = this.lineColorData.g + gDiff\r\n      var b = this.lineColorData.b + bDiff\r\n\r\n      this.colorData.r = Math.min(targetVal, Math.max(0, Math.round(r)))\r\n      this.colorData.g = Math.min(targetVal, Math.max(0, Math.round(g)))\r\n      this.colorData.b = Math.min(targetVal, Math.max(0, Math.round(b)))\r\n      this.colorData.a = Math.min(1, Math.max(0, Number(this.percentageOpacity.toFixed(2))))\r\n\r\n      this.colorLazy.r = this.colorData.r\r\n      this.colorLazy.g = this.colorData.g\r\n      this.colorLazy.b = this.colorData.b\r\n      this.colorLazy.a = this.colorData.a\r\n\r\n      this.colorData.hexa =\r\n        '#' +\r\n        this.componentToHex(this.colorData.r) +\r\n        this.componentToHex(this.colorData.g) +\r\n        this.componentToHex(this.colorData.b) +\r\n        this.componentToHex(Math.round(this.colorData.a * 255))\r\n      this.colorLazy.hexa = this.colorData.hexa\r\n      this.inputValue = this.colorData.hexa\r\n    },\r\n    calculateLineColor(linePos) {\r\n      var perc = linePos / this.lineWidth\r\n      var value = perc % (1 / 6)\r\n      var colorPerc = value / (1 / 6)\r\n      var percRed = 1\r\n      var percGreen = 1\r\n      var percBlue = 1\r\n\r\n      if (perc < 1 / 6) {\r\n        percGreen = colorPerc\r\n        percBlue = 0\r\n      } else if (perc < 2 / 6) {\r\n        percRed = 1 - colorPerc\r\n        percBlue = 0\r\n      } else if (perc < 3 / 6) {\r\n        percRed = 0\r\n        percBlue = colorPerc\r\n      } else if (perc < 4 / 6) {\r\n        percRed = 0\r\n        percGreen = 1 - colorPerc\r\n      } else if (perc < 5 / 6) {\r\n        percRed = colorPerc\r\n        percGreen = 0\r\n      } else {\r\n        percGreen = 0\r\n        percBlue = 1 - colorPerc\r\n      }\r\n      this.lineColorData.r = Math.min(255, Math.max(0, Math.round(percRed * 255)))\r\n      this.lineColorData.g = Math.min(255, Math.max(0, Math.round(percGreen * 255)))\r\n      this.lineColorData.b = Math.min(255, Math.max(0, Math.round(percBlue * 255)))\r\n    },\r\n    registerListeners() {\r\n      document.addEventListener('mouseup', this.mouseup)\r\n      document.addEventListener('mousemove', this.mousemove)\r\n    },\r\n    unregisterListeners() {\r\n      document.removeEventListener('mouseup', this.mouseup)\r\n      document.removeEventListener('mousemove', this.mousemove)\r\n    },\r\n    setSizePoses() {\r\n      var boundingRect = this.$refs.line.getBoundingClientRect()\r\n      this.lineLeft = boundingRect.left\r\n\r\n      var canvBoundingRect = this.$refs.canvas.getBoundingClientRect()\r\n      this.canvasLeft = canvBoundingRect.left\r\n      this.canvasTop = canvBoundingRect.top\r\n      this.canvasHeight = canvBoundingRect.height\r\n\r\n      var boundingRect = this.$refs.opacityLine.getBoundingClientRect()\r\n      this.opacityLeft = boundingRect.left\r\n    },\r\n    normalizeColorData() {\r\n      var normalized = {\r\n        r: null,\r\n        g: null,\r\n        b: null,\r\n        variable: null\r\n      }\r\n      var { r, g, b } = this.colorData\r\n      if (b > g && b > r) {\r\n        normalized.b = 1\r\n      } else if (g > r && g > b) {\r\n        normalized.g = 1\r\n      } else {\r\n        normalized.r = 1\r\n      }\r\n      if (r < g && r < b) {\r\n        normalized.r = 0\r\n      } else if (g < r && g < b) {\r\n        normalized.g = 0\r\n      } else {\r\n        normalized.b = 0\r\n      }\r\n      Array.from('rgb').forEach((col) => {\r\n        if (normalized[col] === null) {\r\n          normalized.variable = col\r\n          normalized[col] = this.colorData[col] / 255\r\n        }\r\n      })\r\n      return normalized\r\n    },\r\n    initSwatches() {\r\n      if (this.swatches !== null && Array.isArray(this.swatches)) {\r\n        var cleanedSwatches = this.swatches.map((s) => this.cleanHexa(s))\r\n        cleanedSwatches.forEach((swatch) => {\r\n          if (!this.swatchesLazy.includes(swatch)) {\r\n            this.swatchesLazy.push(swatch)\r\n          }\r\n        })\r\n      } else {\r\n        var cleanedSwatches = [\r\n          '#f94144',\r\n          '#f3722c',\r\n          '#f8961e',\r\n          '#f9c74f',\r\n          '#90be6d',\r\n          '#43aa8b',\r\n          '#577590',\r\n          '#22223b',\r\n          '#4a4e69',\r\n          '#c9ada7'\r\n        ].map((s) => this.cleanHexa(s))\r\n        this.swatchesLazy = cleanedSwatches\r\n      }\r\n    },\r\n    init() {\r\n      if (this.value) {\r\n        this.colorLazy = this.parseHexa(this.value)\r\n      }\r\n      if (!this.hideSwatches) this.initSwatches()\r\n      this.validate()\r\n      this.setUICursors()\r\n    },\r\n    inputUpdated() {\r\n      this.validate()\r\n      this.setUICursors()\r\n    },\r\n    hexaInputUpdated() {\r\n      this.validateHexa()\r\n      this.setUICursors()\r\n    },\r\n    validateHexChar(c) {\r\n      if (c.length < 0 || c.length > 1) return '0'\r\n      if (isNaN(c)) {\r\n        var validChars = ['A', 'B', 'C', 'D', 'E', 'F']\r\n        if (validChars.includes(c.toUpperCase())) {\r\n          return c.toUpperCase()\r\n        } else {\r\n          return '0'\r\n        }\r\n      } else {\r\n        return c\r\n      }\r\n    },\r\n    cleanHexa(hexa) {\r\n      if (!hexa || hexa.length < 3) return '#000000FF'\r\n      var _cleaned = hexa.toUpperCase()\r\n      if (_cleaned.startsWith('#')) _cleaned = _cleaned.substr(1)\r\n      if (_cleaned.length < 3) return '#000000FF'\r\n      var r, g, b, a\r\n      r = g = b = '00'\r\n      a = 'FF'\r\n      if (_cleaned.length === 3) {\r\n        var rgb = _cleaned\r\n          .split('')\r\n          .map((r) => `0${r}`)\r\n          .map((r) => this.validateHexChar(r))\r\n        r = rgb[0]\r\n        g = rgb[1]\r\n        b = rgb[2]\r\n      } else if (_cleaned.length >= 6) {\r\n        var rgb = _cleaned.split('').map((r) => this.validateHexChar(r))\r\n        r = rgb[0] + rgb[1]\r\n        g = rgb[2] + rgb[3]\r\n        b = rgb[4] + rgb[5]\r\n        if (rgb.length === 8) {\r\n          a = rgb[6] + rgb[7]\r\n        }\r\n      }\r\n      return `#${r}${g}${b}${a}`\r\n    },\r\n    parseHexa(hexa) {\r\n      var hexaArr = this.cleanHexa(hexa).substr(1).split('')\r\n\r\n      var h = hexaArr[0] + hexaArr[1]\r\n      var e = hexaArr[2] + hexaArr[3]\r\n      var x = hexaArr[4] + hexaArr[5]\r\n      var ha = hexaArr[6] + hexaArr[7]\r\n      var r = parseInt(h, 16)\r\n      var g = parseInt(e, 16)\r\n      var b = parseInt(x, 16)\r\n      var a = parseInt(ha, 16) / 255\r\n\r\n      return {\r\n        hexa: '#' + h + e + x + ha,\r\n        r,\r\n        g,\r\n        b,\r\n        a\r\n      }\r\n    },\r\n    validateHexa() {\r\n      var parsedColor = this.parseHexa(this.colorLazy.hexa)\r\n      this.colorData = { ...parsedColor }\r\n\r\n      this.colorLazy.r = this.colorData.r\r\n      this.colorLazy.g = this.colorData.g\r\n      this.colorLazy.b = this.colorData.b\r\n      this.colorLazy.a = this.colorData.a\r\n    },\r\n    componentToHex(c) {\r\n      var hex = c.toString(16).toUpperCase()\r\n      return hex.length == 1 ? '0' + hex : hex\r\n    },\r\n    validate() {\r\n      var r = Number(this.colorLazy.r)\r\n      var g = Number(this.colorLazy.g)\r\n      var b = Number(this.colorLazy.b)\r\n      var a = Number(this.colorLazy.a)\r\n      if (isNaN(r) || r === null) r = 0\r\n      if (isNaN(g) || g === null) g = 0\r\n      if (isNaN(b) || b === null) b = 0\r\n      if (isNaN(a) || a === null) a = 1\r\n      r = Math.min(255, Math.max(0, r))\r\n      g = Math.min(255, Math.max(0, g))\r\n      b = Math.min(255, Math.max(0, b))\r\n      a = Math.min(1, Math.max(0, a))\r\n      this.colorData.r = r\r\n      this.colorData.g = g\r\n      this.colorData.b = b\r\n      this.colorData.a = a\r\n      this.colorData.hexa =\r\n        '#' +\r\n        this.componentToHex(r) +\r\n        this.componentToHex(g) +\r\n        this.componentToHex(b) +\r\n        this.componentToHex(Math.round(a * 255))\r\n      this.colorLazy.hexa = this.colorData.hexa\r\n    },\r\n    setUICursors() {\r\n      this.setSizePoses()\r\n      this.percentageOpacity = this.colorData.a\r\n      var opacityX = this.percentageOpacity * this.opacityWidth\r\n      this.$refs.opacityCursor.style.transform = `translate(${opacityX}px, 0px)`\r\n\r\n      var normalized = this.normalizeColorData()\r\n\r\n      var sector = 0\r\n      var variablePerc = 0\r\n      if (normalized.variable === 'r') {\r\n        if (normalized.g === 1) {\r\n          sector = 1\r\n          variablePerc = 1 - this.colorData.r / 255\r\n        } else if (normalized.b === 1) {\r\n          sector = 4\r\n          variablePerc = this.colorData.r / 255\r\n        }\r\n      } else if (normalized.variable === 'b') {\r\n        if (normalized.r === 1) {\r\n          sector = 5\r\n          variablePerc = 1 - this.colorData.b / 255\r\n        } else if (normalized.g === 1) {\r\n          sector = 2\r\n          variablePerc = this.colorData.b / 255\r\n        }\r\n      } else {\r\n        if (normalized.r === 1) {\r\n          sector = 0\r\n          variablePerc = this.colorData.g / 255\r\n        } else if (normalized.b === 1) {\r\n          sector = 3\r\n          variablePerc = 1 - this.colorData.g / 255\r\n        }\r\n      }\r\n      var sectorLength = this.lineWidth / 6\r\n      var variableSectorLeft = variablePerc * sectorLength\r\n\r\n      var lineCursorLeft = sectorLength * sector + variableSectorLeft\r\n      this.$refs.lineCursor.style.transform = `translate(${lineCursorLeft}px, 0px)`\r\n\r\n      this.lineColorData.r = Math.min(255, Math.max(0, Math.round(normalized.r * 255)))\r\n      this.lineColorData.g = Math.min(255, Math.max(0, Math.round(normalized.g * 255)))\r\n      this.lineColorData.b = Math.min(255, Math.max(0, Math.round(normalized.b * 255)))\r\n\r\n      Array.from('rgb').forEach((col) => {\r\n        if (this.lineColorData[col] === 0) {\r\n          this.percentageWhite = this.colorData[col] / 255\r\n        } else if (this.lineColorData[col] === 255) {\r\n          this.percentageBlack = 1 - this.colorData[col] / 255\r\n        }\r\n      })\r\n\r\n      var canvCursorX = this.canvasWidth * (1 - this.percentageWhite)\r\n      var canvCursorY = this.canvasHeight * this.percentageBlack\r\n      this.$refs.canvasCursor.style.transform = `translate(${canvCursorX}px, ${canvCursorY}px)`\r\n    },\r\n    blurInputR() {\r\n      this.colorLazy.r = this.colorData.r\r\n    },\r\n    blurInputG() {\r\n      this.colorLazy.g = this.colorData.g\r\n    },\r\n    blurInputB() {\r\n      this.colorLazy.b = this.colorData.b\r\n    },\r\n    blurInputA() {\r\n      this.colorLazy.a = this.colorData.a\r\n    },\r\n    blurInputHexa() {\r\n      this.colorLazy.hexa = this.colorData.hexa\r\n    },\r\n    toggleInputs() {\r\n      if (this.inputType === 'rgba') {\r\n        this.inputType = 'hexa'\r\n      } else {\r\n        this.inputType = 'rgba'\r\n      }\r\n    },\r\n    selectSwatch(swatchHexa) {\r\n      var parsedHexa = this.parseHexa(swatchHexa)\r\n      this.colorData = { ...parsedHexa }\r\n      this.colorLazy = { ...parsedHexa }\r\n      this.inputValue = parsedHexa.hexa\r\n      this.$emit('change', this.colorData.hexa)\r\n\r\n      this.setUICursors()\r\n    },\r\n    deleteSwatch(swatch) {\r\n      this.swatchesLazy = this.swatchesLazy.filter((s) => s !== swatch)\r\n      this.$emit('update:swatches', this.swatchesLazy)\r\n      this.$emit('deleteSwatch', swatch)\r\n    },\r\n    addRemoveCurrentSwatch() {\r\n      if (this.hasSelectedSwatch) {\r\n        this.deleteSwatch(this.inputValue)\r\n      } else {\r\n        this.swatchesLazy.push(this.inputValue)\r\n        this.$emit('update:swatches', this.swatchesLazy)\r\n        this.$emit('addSwatch', this.inputValue)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.init()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    this.unregisterListeners()\r\n  }\r\n}\r\n"]},"sourceType":"module","hash":"6ab56e0481e83e043c07cbe95054ccefbc96c42f"}
